// Copyright 2024 Scape Agency BV

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


// ============================================================================
// StyleScape | Animations | Blink
// ============================================================================

@use "../dev" as *;
@use "../variables" as *;
@use "base" as *;


// Blink Animation
// ----------------------------------------------------------------------------

/**
 * Blink Animation
 *
 * Creates a blink animation where the element alternates between visible and invisible states.
 *
 * @mixin animate_blink
 * @param {Number|String} $duration [$animate_base_duration] - The duration of the blink animation.
 * @param {String} $timing_function [step-end] - The timing function for the blink animation.
 * @param {Number|String} $iteration_count [$animate_base_iteration_count] - The number of iterations the animation will run.
 * @param {Number} $start_opacity [1] - The opacity of the element at the start and end of the animation.
 * @param {Number} $blink_opacity [0] - The opacity of the element during the blink.
 */
@mixin animate_blink(
    $duration: $animate_base_duration,
    $timing_function: step-end, 
    $iteration_count: $animate_base_iteration_count,
    $start_opacity: 1,
    $blink_opacity: 0
) {
    @include animate_base(
        animate_blink,
        $duration,
        $timing_function,
        $iteration_count
    );
    @keyframes animate_blink {
        0%, 100% { opacity: $start-opacity; }
        50% { opacity: $blink-opacity; }
    }
}

.animate_blink {
    @include animate_blink();
}


// Rapid Blink Animation
// ----------------------------------------------------------------------------

/**
 * Rapid Blink Animation
 *
 * Creates a rapid blink animation where the element blinks quickly between visible and invisible states.
 *
 * @mixin animate_blink_rapid
 * @param {Number|String} $duration [$animate_base_duration_fast] - The duration of the rapid blink animation.
 * @param {String} $timing_function [steps(2, end)] - The timing function for the rapid blink animation.
 * @param {Number|String} $iteration_count [$animate_base_iteration_count] - The number of iterations the animation will run.
 */
@mixin animate_blink_rapid(
    $duration: $animate_base_duration_fast,
    $timing_function: steps(2, end),
    $iteration_count: $animate_base_iteration_count
) {
    @include animate_base(
        animate_blink_rapid,
        $duration,
        $timing_function,
        $iteration_count
    );
    @keyframes animate_blink_rapid {
        0%, 100% { opacity: 1; }
        50% { opacity: 0; }
    }
}

.animate_blink_rapid {
    @include animate_blink_rapid();
}


// Soft Blink Animation
// ----------------------------------------------------------------------------

/**
 * Soft Blink Animation
 *
 * Creates a soft blink animation with a smooth transition in and out of visibility.
 *
 * @mixin animate_blink_soft
 * @param {Number|String} $duration [$animate_base_duration_slow] - The duration of the soft blink animation.
 * @param {String} $timing_function [ease-in-out] - The timing function for the soft blink animation.
 * @param {Number|String} $iteration_count [$animate_base_iteration_count] - The number of iterations the animation will run.
 */
@mixin animate_blink_soft(
    $duration: $animate_base_duration_slow,
    $timing_function: ease-in-out,
    $iteration_count: $animate_base_iteration_count
) {
    @include animate_base(
        animate_blink_soft,
        $duration,
        $timing_function,
        $iteration_count
    );
    @keyframes animate_blink_soft {
        0%, 100% { opacity: 1; }
        50% { opacity: 0.3; }
    }
}

.animate_blink_soft {
    @include animate_blink_soft();
}


// Alternating Blink Animation
// ----------------------------------------------------------------------------

/**
 * Alternating Blink Animation
 *
 * Creates an alternating blink animation where the element blinks at regular intervals.
 *
 * @mixin animate_blink_alternate
 * @param {Number|String} $duration [$animate_base_duration] - The duration of the alternating blink animation.
 * @param {String} $timing_function [linear] - The timing function for the alternating blink animation.
 * @param {Number|String} $iteration_count [$animate_base_iteration_count] - The number of iterations the animation will run.
 */
@mixin animate_blink_alternate(
    $duration: $animate_base_duration,
    $timing_function: linear,
    $iteration_count: $animate_base_iteration_count
) {
    @include animate_base(
        animate_blink_alternate,
        $duration,
        $timing_function,
        $iteration_count
    );
    @keyframes animate_blink_alternate {
        0%, 100% { opacity: 1; }
        25%, 75% { opacity: 0; }
    }
}

.animate_blink_alternate {
    @include animate_blink_alternate();
}
