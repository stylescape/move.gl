// Copyright 2024 Scape Agency BV

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


// ============================================================================
// StyleScape | Animations | Roll
// ============================================================================

@use "../dev" as *;
@use "../variables" as *;
@use "base" as *;


// Roll Animation
// ----------------------------------------------------------------------------

@mixin animate_roll(
    $translate-distance: 100%, 
    $rotation_angle: 360deg, 
    $duration: $animate_base_duration * 2,
    $timing_function: ease-in-out, 
    $iteration_count: $animate_base_iteration_count
) {
    @include animate_base(
        animate_roll,
        $duration,
        $timing_function,
        $iteration_count,
    );
    @keyframes animate_roll {
        0% { transform: translateX(0) rotate(0deg); }
        100% { transform: translateX($translate-distance) rotate($rotation_angle); }
    }
}

.animate_roll {
    @include animate_roll();
}


// Reverse Roll Animation
// ----------------------------------------------------------------------------

@mixin animate_roll_reverse(
    $translate-distance: -100%, 
    $rotation_angle: -360deg, 
    $duration: $animate_base_duration * 2,
    $timing_function: ease-in-out, 
    $iteration_count: $animate_base_iteration_count
) {
    @include animate_base(
        animate_roll_reverse,
        $duration,
        $timing_function,
        $iteration_count,
    );
    @keyframes animate_roll_reverse {
        0% { transform: translateX(0) rotate(0deg); }
        100% { transform: translateX($translate-distance) rotate($rotation_angle); }
    }
}

.animate_roll_reverse {
    @include animate_roll_reverse();
}


// Slow Roll Animation
// ----------------------------------------------------------------------------

@mixin animate_roll_slow(
    $translate-distance: 100%, 
    $rotation_angle: 360deg, 
    $duration: $animate_base_duration_slow * 2,
    $timing_function: ease-in-out, 
    $iteration_count: $animate_base_iteration_count
) {
    @include animate_base(
        animate_roll_slow,
        $duration,
        $timing_function,
        $iteration_count,
    );
    @keyframes animate_roll_slow {
        0% { transform: translateX(0) rotate(0deg); }
        100% { transform: translateX($translate-distance) rotate($rotation_angle); }
    }
}

.animate_roll_slow {
    @include animate_roll_slow();
}


// Vertical Roll Animation
// ----------------------------------------------------------------------------

@mixin animate_roll_vertical(
    $translate-distance: 100%, 
    $rotation_angle: 360deg, 
    $duration: $animate_base_duration * 2,
    $timing_function: ease-in-out, 
    $iteration_count: $animate_base_iteration_count
) {
    @include animate_base(
        animate_roll_vertical,
        $duration,
        $timing_function,
        $iteration_count,
    );
    @keyframes animate_roll_vertical {
        0% { transform: translateY(0) rotate(0deg); }
        100% { transform: translateY($translate-distance) rotate($rotation_angle); }
    }
}

.animate_roll_vertical {
    @include animate_roll_vertical();
}





// originally authored by Nick Pettit - https://github.com/nickpettit/glide

// @-webkit-keyframes rollIn {
//     from {
//       opacity: 0;
//       -webkit-transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);
//       transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);
//     }
  
//     100% {
//       opacity: 1;
//       -webkit-transform: none;
//       transform: none;
//     }
//   }
  
//   @keyframes rollIn {
//     from {
//       opacity: 0;
//       -webkit-transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);
//       transform: translate3d(-100%, 0, 0) rotate3d(0, 0, 1, -120deg);
//     }
  
//     100% {
//       opacity: 1;
//       -webkit-transform: none;
//       transform: none;
//     }
//   }
  
//   .rollIn {
//     -webkit-animation-name: rollIn;
//     animation-name: rollIn;
//   }
  
//   /* originally authored by Nick Pettit - https://github.com/nickpettit/glide */
  
//   @-webkit-keyframes rollOut {
//     from {
//       opacity: 1;
//     }
  
//     100% {
//       opacity: 0;
//       -webkit-transform: translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg);
//       transform: translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg);
//     }
//   }
  
//   @keyframes rollOut {
//     from {
//       opacity: 1;
//     }
  
//     100% {
//       opacity: 0;
//       -webkit-transform: translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg);
//       transform: translate3d(100%, 0, 0) rotate3d(0, 0, 1, 120deg);
//     }
//   }
  
//   .rollOut {
//     -webkit-animation-name: rollOut;
//     animation-name: rollOut;
//   }
  
//   @-webkit-keyframes zoomIn {
//     from {
//       opacity: 0;
//       -webkit-transform: scale3d(.3, .3, .3);
//       transform: scale3d(.3, .3, .3);
//     }
  
//     50% {
//       opacity: 1;
//     }
//   }
  
//   @keyframes zoomIn {
//     from {
//       opacity: 0;
//       -webkit-transform: scale3d(.3, .3, .3);
//       transform: scale3d(.3, .3, .3);
//     }
  
//     50% {
//       opacity: 1;
//     }
//   }
  