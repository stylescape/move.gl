// ============================================================================
// Poster
// ============================================================================

////
/// 
/// Glow Animations Mixin Module
/// ===========================================================================
/// 
/// This module ...
/// 
/// 
/// @group Animations
/// @author Scape Agency
/// @link https://move.gl
/// @since 0.1.0 initial release
/// @todo None
/// @access public
/// 
////


// ============================================================================
// Use
// ============================================================================

@use "sass:math";
@use "../dev" as *;
@use "../variables" as *;
@use "../keyframes" as *;
@use "base" as *;


// ============================================================================
// Mixins
// ============================================================================





///
/// Glow Animation
/// Creates a glowing effect by animating the box shadow of the element.
/// @name animate_glow
/// @param {Color} $color [$animate_base_color_glow_01] - The color of the glow.
/// @param {Number|String} $start-shadow_size [5px] - The initial size of the shadow.
/// @param {Number|String} $end-shadow_size [15px] - The maximum size of the shadow.
/// @param {Number|String} $duration [$animate_base_duration] - The duration of the glow animation.
/// @param {String} $timing_function [ease-in-out] - The timing function for the glow animation.
/// @param {Number|String} $iteration_count [$animate_base_iteration_count] - The number of iterations the animation will run.
///
@mixin animate_glow(
    $color: $animate_base_color_glow_01, 
    $start-shadow_size: 5px, 
    $end-shadow_size: 15px, 
    $duration: $animate_base_duration, 
    $timing_function: ease-in-out, 
    $iteration_count: $animate_base_iteration_count
) {
    @include animate_base(
        animate_glow,
        $duration,
        $timing_function,
        $iteration_count,
    );
    @keyframes animate_glow {
        0%, 100% { box-shadow: 0 0 $start-shadow-size 0 $color; }
        50% { box-shadow: 0 0 $end-shadow-size 5px $color; }
    }
}


// Pulse Glow Animation
// ----------------------------------------------------------------------------

///
/// Pulse Glow Animation
/// Creates a pulsing glow effect where the glow size changes over time.
/// @name animate_glow_pulse
/// @param {Color} $color [$animate_base_color_glow_01] - The color of the glow.
/// @param {Number|String} $duration [$animate_base_duration] - The duration of the glow animation.
/// @param {String} $timing_function [ease-in-out] - The timing function for the glow animation.
/// @param {Number|String} $iteration_count [$animate_base_iteration_count] - The number of iterations the animation will run.
///
@mixin animate_glow_pulse(
    $color: $animate_base_color_glow_01,
    $duration: $animate_base_duration,
    $timing_function: ease-in-out,
    $iteration_count: $animate_base_iteration_count
) {
    @include animate_base(
        animate_glow_pulse,
        $duration,
        $timing_function,
        $iteration_count,
    );
    @keyframes animate_glow_pulse {
        0%, 100% { box-shadow: 0 0 10px -5px $color; }
        50% { box-shadow: 0 0 20px 0 $color; }
    }
}


// Soft Glow Animation
// ----------------------------------------------------------------------------

///
/// Soft Glow Animation
/// Creates a soft glow effect with a slower and subtler animation.
/// @name animate_glow_soft
/// @param {Color} $color [$animate_base_color_glow_01] - The color of the glow.
/// @param {Number|String} $duration [$animate_base_duration_slow] - The duration of the glow animation.
/// @param {String} $timing_function [ease-in-out] - The timing function for the glow animation.
/// @param {Number|String} $iteration_count [$animate_base_iteration_count] - The number of iterations the animation will run.
///
@mixin animate_glow_soft(
    $color: $animate_base_color_glow_01, 
    $duration: $animate_base_duration_slow,
    $timing_function: ease-in-out, 
    $iteration_count: $animate_base_iteration_count
) {
    @include animate_base(
        animate_glow_soft,
        $duration,
        $timing_function,
        $iteration_count,
    );
    @keyframes animate_glow_soft {
        0%, 100% { box-shadow: 0 0 10px 0 rgba($color, 0.5); }
        50% { box-shadow: 0 0 20px 5px rgba($color, 0.8); }
    }
}

.animate_glow_soft {
    @include animate_glow_soft($animate_base_color_glow_01);
}

// Multi-Color Glow Animation
// ----------------------------------------------------------------------------


///
/// Multi-Color Glow Animation
/// Creates a glow animation that cycles through multiple colors.
/// @name animate_glow_multicolor
/// @param {List} $colors [($animate_base_color_glow_01, $animate_base_color_glow_02, $animate_base_color_glow_03)] - A list of colors for the glow animation.
/// @param {Number|String} $duration [$animate_base_duration_slow] - The duration of the glow animation.
/// @param {String} $timing_function [linear] - The timing function for the glow animation.
/// @param {Number|String} $iteration_count [$animate_base_iteration_count] - The number of iterations the animation will run.
///
@mixin animate_glow_multicolor(
    $colors: (
        $animate_base_color_glow_01,
        $animate_base_color_glow_02,
        $animate_base_color_glow_03,
    ),
    $duration: $animate_base_duration_slow,
    $timing_function: linear,
    $iteration_count: $animate_base_iteration_count
) {
    @include animate_base(
        animate_glow_multicolor,
        $duration,
        $timing_function,
        $iteration_count,
    );
    $total_colors: length($colors);
    @keyframes animate_glow_multicolor {
        @for $i from 1 through $total_colors {
            // #{percentage(($i - 1) / $total_colors)}, 
            // #{percentage($i / $total_colors)} {
            #{percentage(math.div(($i - 1), $total_colors))}, 
            #{percentage(math.div($i, $total-colors))} {
                    box-shadow: 0 0 10px 5px nth($colors, $i);
            }
        }
    }
}
